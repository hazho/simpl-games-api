apiVersion: v1
kind: ConfigMap
metadata:
  name: settings
  namespace: {{.Values.namespace}}
data:
  settings: |+
    from django.utils import six
    from thorn import validators as thorn_validators
    from jslog4kube import LOGGING

    LOGGING['loggers']['rest_framework'] = LOGGING['loggers']['demo']
    LOGGING['loggers']['allauth'] = LOGGING['loggers']['demo']
    LOGGING['loggers']['cuser'] = LOGGING['loggers']['demo']
    LOGGING['loggers']['thorn.django'] = LOGGING['loggers']['demo']
    LOGGING['loggers']['simpl_users'] = LOGGING['loggers']['demo']
    LOGGING['loggers']['courses'] = LOGGING['loggers']['demo']
    LOGGING['loggers']['simpl'] = LOGGING['loggers']['demo']
    LOGGING['loggers']['kombu'] = LOGGING['loggers']['demo']

    from config.settings.common import *  # noqa
    from config.settings.env import e as E

    SECRET_KEY = env("DJANGO_SECRET_KEY")
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

    # django-secure
    # ------------------------------------------------------------------------------
    INSTALLED_APPS += ("djangosecure", )

    SECURITY_MIDDLEWARE = (
        'djangosecure.middleware.SecurityMiddleware',
    )


    # Make sure djangosecure.middleware.SecurityMiddleware is listed first
    MIDDLEWARE_CLASSES = SECURITY_MIDDLEWARE + MIDDLEWARE_CLASSES

    # set this to 60 seconds and then to 518400 when you can prove it works
    SECURE_HSTS_SECONDS = 60
    SECURE_HSTS_INCLUDE_SUBDOMAINS = env.bool(
        "DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS", default=True)
    SECURE_FRAME_DENY = env.bool("DJANGO_SECURE_FRAME_DENY", default=True)
    SECURE_CONTENT_TYPE_NOSNIFF = env.bool(
        "DJANGO_SECURE_CONTENT_TYPE_NOSNIFF", default=True)
    SECURE_BROWSER_XSS_FILTER = True
    SESSION_COOKIE_SECURE = False
    SESSION_COOKIE_HTTPONLY = True
    SECURE_SSL_REDIRECT = env.bool("DJANGO_SECURE_SSL_REDIRECT", default=True)

    # SITE CONFIGURATION
    # ------------------------------------------------------------------------------
    # Hosts/domain names that are valid for this site
    # See https://docs.djangoproject.com/en/1.6/ref/settings/#allowed-hosts
    ALLOWED_HOSTS = ['simpl.dev.wharton.revsys.com', 'simpl-api.simpl']
    # END SITE CONFIGURATION

    INSTALLED_APPS += ("gunicorn", )

    # STORAGE CONFIGURATION
    # ------------------------------------------------------------------------------
    # Uploaded Media Files
    # ------------------------
    # See: http://django-storages.readthedocs.org/en/latest/index.html

    # AWS cache settings, don't change unless you know what you're doing:
    AWS_EXPIRY = 60 * 60 * 24 * 7



    # Static Assets
    # ------------------------

    # TEMPLATE CONFIGURATION
    # ------------------------------------------------------------------------------
    # See:
    # https://docs.djangoproject.com/en/dev/ref/templates/api/#django.template.loaders.cached.Loader
    TEMPLATES[0]['OPTIONS']['loaders'] = [
        ('django.template.loaders.cached.Loader', [
            'django.template.loaders.filesystem.Loader', 'django.template.loaders.app_directories.Loader', ]),
    ]

    # DATABASE CONFIGURATION
    # ------------------------------------------------------------------------------
    # Raises ImproperlyConfigured exception if DATABASE_URL not in os.environ
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'HOST': E.db_host,
            'NAME': E.db_name,
            'PASSWORD': E.db_pass,
            'PORT': int(E.db_port) if E.count('db_port') else 5432,
            'USER': E.db_user,
            'CONN_MAX_AGE': 60,
        }
    }


    # Set CONN_MAX_AGE
    # DATABASES['default']['CONN_MAX_AGE'] = 500

    # CACHING
    # ------------------------------------------------------------------------------
    # Heroku URL does not pass the DB number, so we parse it in
    CACHES = {
      'default': {
          'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
          'LOCATION': "memcache:11211",
      },
    }

    # Your production stuff: Below this line define 3rd party library settings
    THORN_RECIPIENT_VALIDATORS = [
        thorn_validators.block_internal_ips(),
        thorn_validators.ensure_protocol('http', 'https'),
        thorn_validators.ensure_port(80, 443, 8080),
    ]
